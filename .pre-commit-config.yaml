# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
exclude: _generated.go$|\.svg$|^third_party/|^proto/swagger/|^apiserver/pkg/swagger/datafile.go$|^docs/reference/api.md$|^config/grafana/

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
        exclude: ^helm-chart/|^mkdocs\.yml$|^benchmark/perf-tests/|^\.krew\.yaml$
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-vcs-permalinks
      - id: check-json
      - id: pretty-format-json
        args: [--autofix, --no-sort-keys, --no-ensure-ascii]
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: detect-private-key

  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.18.2
    hooks:
      - id: gitleaks

  - repo: local
    hooks:
      - id: check-golangci-lint-version
        name: golangci-lint version check
        entry: bash -c 'version="1.60.3"; [ "$(golangci-lint --version | awk "/version/ {print \$4}" | sed "s/^v//")" = "$version" ] || { echo "golangci-lint version is not $version"; exit 1; }'
        language: system
        always_run: true
        fail_fast: true
        pass_filenames: false

  - repo: local
    hooks:
      - id: golangci-lint-ray-operator
        name: golangci-lint (ray-operator)
        entry: bash -c 'cd ray-operator && golangci-lint run --fix --exclude-files _generated.go --timeout 10m0s; status=$?; cd ..; exit $status'
        types: [ go ]
        language: golang
        require_serial: true
        files: ^ray-operator/

  - repo: local
    hooks:
      - id: golangci-lint-kubectl-plugin
        name: golangci-lint (kubectl-plugin)
        entry: bash -c 'cd kubectl-plugin && golangci-lint run --fix --timeout 10m0s; status=$?; cd ..; exit $status'
        types: [ go ]
        language: golang
        require_serial: true
        files: ^kubectl-plugin/

  - repo: local
    hooks:
      - id: check-kubeconform-version
        name: kubeconform version check
        entry: bash -c 'version="0.6.7"; [ "$(kubeconform -v | awk -F"v" "{print \$2}")" = "$version" ] || { echo "kubeconform version is not $version"; exit 1; }'
        language: system
        always_run: true
        fail_fast: true
        pass_filenames: false

  - repo: local
    hooks:
      - id: validate-helm-charts
        name: validate helm charts with kubeconform
        entry: bash scripts/validate-helm.sh
        language: system
        pass_filenames: false
